experiment_name: mnist_gaussian
random_seed: 1998
head_type: gaussian
dataset:
  type: image
  spec: mnist
batch_size: 4
accelerator: cpu
log_dir: logs/mnist_results
model_ckpt_path: chkp/mnist_gaussian/version_0/best_loss.ckpt
cce_output_kernel: bhatt

# the open_clip model seems to be throwing an error when the compute_cce gets called in probabilistic_evaluator.py
# STACK TRACE::
# eval_model.py 82 <module>
# main(config_path=Path(args.config))

# eval_model.py 67 main
# results = prob_evaluator(model=model, data_module=datamodule)

# _contextlib.py 116 decorate_context
# return func(*args, **kwargs)

# probabilistic_evaluator.py 124 __call__
# cce_vals, grid, targets = self.compute_cce(

# probabilistic_evaluator.py 182 compute_cce
# x, y, x_prime, y_prime = self._get_samples_for_mcmd(model, sample_loader)

# probabilistic_evaluator.py 306 _get_samples_for_mcmd
# x.append(self.clip_model.encode_image(inputs.to(self.device), normalize=False))

# model.py 266 encode_image
# features = self.visual(image)

# module.py 1553 _wrapped_call_impl
# return self._call_impl(*args, **kwargs)

# module.py 1562 _call_impl
# return forward_call(*args, **kwargs)

# transformer.py 609 forward
# x = self.conv1(x)  # shape = [*, width, grid, grid]

# module.py 1553 _wrapped_call_impl
# return self._call_impl(*args, **kwargs)

# module.py 1562 _call_impl
# return forward_call(*args, **kwargs)

# conv.py 458 forward
# return self._conv_forward(input, self.weight, self.bias)

# conv.py 454 _conv_forward
# return F.conv2d(input, weight, bias, self.stride,

# RuntimeError:
# Given groups=1, weight of size [768, 3, 32, 32], expected input[4, 1, 28, 28] to have 3 channels, but got 1 channels instead
#
# FIXME: the channels dim is incorrect for the MNIST images, because they are B&W.
# Here is the encode_image method from open_clip:
# def encode_image(self, image, normalize: bool = False):
#   features = self.visual(image)
#   return F.normalize(features, dim=-1) if normalize else features
#
# Main issue: I don't know how to get the open_clip to work with B&W images
# potential fixes:
# - in the dataloader, expand the B&W image in MNIST to a 3 channel image
# - figure out how to get the open_clip encode_image to take a B&W image <- this is what the best would be
#   > this would also probably require some additional code for configuring if the image data is B&W or not
# - scrap MNIST and just try this on CIFAR-10 or another dataset
